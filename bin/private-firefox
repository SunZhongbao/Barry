#!/usr/bin/env perl

use autodie qw(:all);
use Config::IniFiles;
use String::ShellQuote;
use strict;
use v5.10; # for say

## start code-generator "^\\s *#\\s *"
# generate-getopt -s perl -P rrsync i:private-instance=1 pprofile-manager \
# eexecute
## end code-generator
## start generated code
use Getopt::Long;

Getopt::Long::Configure("posix_default");



my $execute = 0;
my $private_instance = 1;
my $profile_manager = 0;
my $rsync = 0;

my $handler_help = sub {
    print ;
    print "\n\n选项和参数：\n";
    printf "%6s", '-e, ';
    printf "%-24s", '--[no]execute';
    if (length('--[no]execute') > 24 and length() > 0) {
        print "\n";
        printf "%30s", "";
    }
    printf "%s", ;
    print "\n";
    printf "%6s", '-i, ';
    printf "%-24s", '--private-instance=PRIVATE-INSTANCE';
    if (length('--private-instance=PRIVATE-INSTANCE') > 24 and length() > 0) {
        print "\n";
        printf "%30s", "";
    }
    printf "%s", ;
    print "\n";
    printf "%6s", '-p, ';
    printf "%-24s", '--[no]profile-manager';
    if (length('--[no]profile-manager') > 24 and length() > 0) {
        print "\n";
        printf "%30s", "";
    }
    printf "%s", ;
    print "\n";
    printf "%6s", '-r, ';
    printf "%-24s", '--[no]rsync';
    if (length('--[no]rsync') > 24 and length() > 0) {
        print "\n";
        printf "%30s", "";
    }
    printf "%s", ;
    print "\n";

    my $exit_value = 0;
    if (@_ && $_[0] ne "help" && $_[1] != 1) {
        $exit_value = shift @_;
        print "@_\n";
    }

    exit($exit_value);
};

GetOptions (
    'execute|e!' => \$execute,
    'private-instance|i=s' => \$private_instance,
    'profile-manager|p!' => \$profile_manager,
    'rsync|r!' => \$rsync,
    'help|h!' => \&$handler_help,
);


## end generated code

my $private_home_dir = "$ENV{HOME}/.cache/private-firefox-${private_instance}";
my $home_dir = "$ENV{HOME}";
chdir "${home_dir}/.mozilla/firefox"
    or die "Can't change dir to firefox settings dir";

use File::Path qw(make_path remove_tree);
my @created = make_path("${private_home_dir}");

my $private_profile_name = "private${private_instance}";
my $private_profile_dir = "${private_profile_name}.firefox/";
my $private_firefox_dir = "${private_home_dir}/firefox";


my $profile_ini = Config::IniFiles->new( -file => "profiles.ini" );

my $default_section;
my $private_section;

for my $section ($profile_ini->Sections) {
    $default_section = $section if $profile_ini->val($section, "Default") == 1;
    $private_section = $section if $profile_ini->val($section, "Path") eq "$private_profile_dir";
}

die "Can't find default section" unless $default_section;

my $default_profile_dir = $profile_ini->val($default_section, "Path");
die "Can't find default profile dir" unless -d $default_profile_dir;

if (not $private_section) {
    for ( 0..100 ) {
        if (not $profile_ini->SectionExists("Profile$_")) {
            say STDERR "Adding section: Profile$_";

            $profile_ini->AddSection ( "Profile$_" );
            $private_section = "Profile$_";
            # [Profile3]
            # Name=firefox-57
            # IsRelative=1
            # Path=neaao4ee.firefox-57

            $profile_ini->newval("${private_section}", "Path", "${private_profile_dir}");
            $profile_ini->newval("${private_section}", "Name", $private_profile_name);
            $profile_ini->newval("${private_section}", "IsRelative", 1);
            $profile_ini->RewriteConfig();
            last;
        } else {
            my $section = "Profile$_";
            if ($profile_ini->val($section, "Path") eq "${private_profile_dir}") {
                for (($_ + 1) .. 100) {
                    if (not $profile_ini->SectionExists("Profile$_")) {
                        last;
                    }
                    if ($profile_ini->val("Profile$_", "Path") eq "${private_profile_dir}") {
                        say STDERR "Delete section: Profile$_";
                        $profile_ini->DeleteSection("Profile$_");
                    }
                }
                last;
            }
        }
    }
}

if (! -d $private_profile_dir || ! -d $private_firefox_dir || "$rsync") {
    system("debug-run", "rsync", "$default_profile_dir/", "$private_profile_dir", "-acv", "--delete", "--exclude", ".git", "--exclude", "storage/default/http*");
    system("debug-run rsync ~/external/firefox/ ${private_home_dir}/firefox -a --delete");
    system("debug-run rsync ~/.local-config/etc/firefox-icons.${private_instance}/ ${private_firefox_dir}/browser/chrome/icons/default -a");
}

$ENV{THE_FIREFOX} = "${private_firefox_dir}/firefox";

my $args = join(" ", shell_quote(@ARGV));
$ENV{FIREFOX_PROFILE_ARG} = "-P ${private_profile_name}";

if ($execute) {
    system(@ARGV);
} else {
    system("nohup firefox $args &> ~/tmp/nohup.log &");
}
