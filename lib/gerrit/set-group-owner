#!/usr/bin/env perl
use strict;
use v5.10.1; # for say and switch
use autodie qw(:all);
use IPC::System::Simple qw(run runx capture capturex $EXITVAL EXIT_ANY);
binmode(STDOUT, ":utf8");
binmode(STDERR, ":utf8");
use Encode;
use utf8;
@ARGV = map {decode_utf8 $_} @ARGV;

use feature 'signatures';
no warnings "experimental::signatures";

use Data::Dumper;
use JSON;

my $json = JSON->new->utf8->canonical->pretty;

(my $comment_doc = <<~'EOFc83131117f09') =~ s,^# .*org-mode.*,,gm;
# {%org-mode%}

# {%/org-mode%}
EOFc83131117f09

## start code-generator "^\\s *#\\s *"
# generate-getopt -s perl -P '?"$comment_doc"' \
# g:group o:owner
## end code-generator
## start generated code
use Getopt::Long;

Getopt::Long::Configure("posix_default");



my $group = "";
my $owner = "";

my $handler_help = sub {
    print "$comment_doc";
    print "\n\n选项和参数：\n";
    printf "%6s", '-g, ';
    printf "%-24s", '--group=GROUP';
    if (length('--group=GROUP') > 24 and length() > 0) {
        print "\n";
        printf "%30s", "";
    }
    printf "%s", ;
    print "\n";
    printf "%6s", '-o, ';
    printf "%-24s", '--owner=OWNER';
    if (length('--owner=OWNER') > 24 and length() > 0) {
        print "\n";
        printf "%30s", "";
    }
    printf "%s", ;
    print "\n";

    my $exit_value = 0;
    if (@_ && $_[0] ne "help" && $_[1] != 1) {
        $exit_value = shift @_;
        print "@_\n";
    }

    exit($exit_value);
};

GetOptions (
    'group|g=s' => \$group,
    'owner|o=s' => \$owner,
    'help|h!' => \&$handler_help,
);


## end generated code

sub group_name2id($group) {
    my $group_json = $json->decode(scalar capturex("gr", "rest", "a/groups/${group}", ));
    my $group_id = $group_json->{id};
    return $group_id;
}

my $group_id = group_name2id($group);
my $owner_id = group_name2id($owner);

my $owner_data = {
    owner => ${owner},
};


runx "debug-run", "gr", "rest", "a/groups/${group}/owner", "-X", "PUT", "--data", decode_utf8($json->encode($owner_data)), "-H", 'Content-Type: application/json',
