#!/usr/bin/env perl
use strict;
use v5.10.1; # for say and switch
use autodie qw(:all);
use IPC::System::Simple qw(run runx capture capturex $EXITVAL EXIT_ANY);
binmode(STDOUT, ":utf8");
binmode(STDERR, ":utf8");
use Encode;
use utf8;
@ARGV = map {decode_utf8 $_} @ARGV;

use Data::Dumper;
use JSON;

my $json = JSON->new->utf8->canonical->pretty;

use feature 'signatures';
no warnings "experimental::signatures";

(my $comment_doc = <<~'EOFc83131117f09') =~ s,^# .*org-mode.*,,gm;
# {%org-mode%}

# {%/org-mode%}
EOFc83131117f09

## start code-generator "^\\s *#\\s *"
# generate-getopt -s perl -P '?"$comment_doc"' \
# j:job-name='$ENV{JOB_NAME}' p:param-name
## end code-generator
## start generated code
use Getopt::Long;

Getopt::Long::Configure("posix_default");



my $job_name = $ENV{JOB_NAME};
my $param_name = "";

my $handler_help = sub {
    print "$comment_doc";
    print "\n\n选项和参数：\n";
    printf "%6s", '-j, ';
    printf "%-24s", '--job-name=JOB-NAME';
    if (length('--job-name=JOB-NAME') > 24 and length() > 0) {
        print "\n";
        printf "%30s", "";
    }
    printf "%s", ;
    print "\n";
    printf "%6s", '-p, ';
    printf "%-24s", '--param-name=PARAM-NAME';
    if (length('--param-name=PARAM-NAME') > 24 and length() > 0) {
        print "\n";
        printf "%30s", "";
    }
    printf "%s", ;
    print "\n";

    my $exit_value = 0;
    if (@_ && $_[0] ne "help" && $_[1] != 1) {
        $exit_value = shift @_;
        print "@_\n";
    }

    exit($exit_value);
};

GetOptions (
    'job-name|j=s' => \$job_name,
    'param-name|p=s' => \$param_name,
    'help|h!' => \&$handler_help,
);


## end generated code

my $job_json = $json->decode(scalar capturex("jc", "curl", "job/${job_name}/api/json"));
my $has_param = 0;

map {
    map {
        $has_param = 1 if $_->{name} eq $param_name;
    } @{$_->{parameterDefinitions}}
} @{$job_json->{actions}};

exit 0 if $has_param;
exit 1;
