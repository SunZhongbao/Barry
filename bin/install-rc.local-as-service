#!/usr/bin/env bash

## start code-generator "^\\s *#\\s *"
# generate-getopt -P @start-ss @:password @:port
## end code-generator
## start generated code
TEMP=$(POSIXLY_CORRECT=true getopt -o h \
                      --long password:,port:,start-ss,help,no-start-ss \
                      -n $(basename -- $0) -- "$@")
declare password=
declare port=
declare start_ss=false
eval set -- "$TEMP"
while true; do
    case "$1" in

        --password)
            password=$2
            shift 2

            ;;
        --port)
            port=$2
            shift 2

            ;;
        --start-ss|--no-start-ss)
            if test "$1" = --no-start-ss; then
                start_ss=false
            else
                start_ss=true
            fi
            shift

            ;;
        -h|--help)
            set +x
            echo -e
            echo
            echo Options and arguments:
            printf "%6s" " "
            printf %-24s '--password=PASSWORD'
            echo
            printf "%6s" " "
            printf %-24s '--port=PORT'
            echo
            printf "%6s" " "
            printf %-24s '--[no-]start-ss'
            echo
            exit
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error: $(. bt; echo; bt | indent-stdin)"
            ;;
    esac
done


## end generated code

if test "${start_ss}" = true; then
    touch /etc/rc.local
    chmod +x /etc/rc.local
    cat > /etc/rc.local <<EOF
#!/usr/bin/env bash

cd /root
s=s
password="$password"
port=$port

# nohup \${s}\${s}\${s}erver -k "\${password}" -p "\${port}"&
nohup \${s}\${s}-\${s}erver --plugin obf\${s}-\${s}erver --plugin-opt\${s} "obf\${s}=http" -p "\${port}" -k "\${password}"&
nohup ss-server --plugin v2ray-plugin  -p 443 --plugin-opts "server;mode=quic;host=flonk-zj.6655.la" -k "\${password}" &> v2ray.log&
EOF
    chmod +x /etc/rc.local
    killall ss-server || trrue
    killall obfs-server || true
    rm /etc/init.d/shadowsocks-libev -f
fi

apt-get install -y shadowsocks-libev simple-obfs rsync
if which systemctl >/dev/null 2>&1 && test ! -e /etc/systemd/system/rc-local.service && test -d /etc/systemd/system/; then
    echo need install rc.local service 1>&2
    cat <<EOF | tee /etc/systemd/system/rc-local.service
#  This file is part of systemd.
#
#  systemd is free software; you can redistribute it and/or modify it
#  under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.

[Unit]
Description=/etc/rc.local Compatibility
ConditionPathExists=/etc/rc.local

[Service]
Type=forking
ExecStart=/etc/rc.local
TimeoutSec=0
StandardOutput=tty
RemainAfterExit=yes
SysVStartPriority=99

[Install]
WantedBy=multi-user.target
EOF
    chmod a+X /etc/systemd/system/rc-local.service
    systemctl --system daemon-reload
    systemctl enable rc-local.service
fi
systemctl restart rc-local.service
