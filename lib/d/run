#!/usr/bin/env bash
set -e

declare comment_doc=$(
    cat <<'EOFe9576f8668e0' | grep -v '#.*org-mode%'
# {%org-mode%}

# {%/org-mode%}
EOFe9576f8668e0
        )

## start code-generator "^\\s *#\\s *"
# generate-getopt -P '?"${comment_doc}"' \
    # p:home-postfix

## end code-generator
## start generated code
TEMP=$(POSIXLY_CORRECT=true getopt -o p:h \
                      --long home-postfix:,help \
                      -n "$(basename -- "$0")" -- "$@")
declare home_postfix=
eval set -- "$TEMP"
while true; do
    case "$1" in

        -p|--home-postfix)
            home_postfix=$2
            shift 2

            ;;
        -h|--help)
            set +x
            echo -e "${comment_doc}"
            echo
            echo Options and arguments:
            printf %6s '-p, '
            printf %-24s '--home-postfix=HOME_POSTFIX'
            echo
            exit
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error: $(. bt; echo; bt | indent-stdin)"
            ;;
    esac
done


## end generated code

if test -z "${home_postfix}" -a -d ~/.cache/docker-home.${1}; then
    home_postfix=$1
fi

home_postfix=${home_postfix:+.${home_postfix}}

home=~/.cache/docker-home${home_postfix}

if test ! -d ${home}; then
    mkdir -p ${home}

    for t in py pl; do
        git clone ~/.${t}env/ ${home}/.${t}env
        cp ~/.${t}env/plugins/ ${home}/.${t}env/ -av
    done

    cp ~/.cache/docker-home/.bashrc ${home}/

fi
docker run --cap-add=SYS_PTRACE -it \
       -v ${home}:/home/build \
       -v ~/src:/home/build/src \
       -v ~/system-config/:/home/build/system-config \
       -v ~/.ssh:/home/build/.ssh \
       -v /var/run/docker.sock:/var/run/docker.sock \
       -v $SSH_AUTH_SOCK:$SSH_AUTH_SOCK \
       "$@"
