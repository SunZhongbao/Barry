#!/usr/bin/env perl
use strict;
use v5.10.1; # for say and switch
use autodie qw(:all);
use IPC::System::Simple qw(run runx capture capturex $EXITVAL EXIT_ANY);
binmode(STDOUT, ":utf8");
binmode(STDERR, ":utf8");
use Encode;
use utf8;
@ARGV = map {decode_utf8 $_} @ARGV;

use feature 'signatures';
no warnings "experimental::signatures";

(my $comment_doc = <<~'EOFc83131117f09') =~ s,^# .*org-mode.*,,gm;
# {%org-mode%}

# {%/org-mode%}
EOFc83131117f09

## start code-generator "^\\s *#\\s *"
# generate-getopt -s perl -P '?"$comment_doc"' \
# c:exit-code
## end code-generator
## start generated code
use Getopt::Long;

Getopt::Long::Configure("posix_default");



my $exit_code = "";

my $handler_help = sub {
    print "$comment_doc";
    print "\n\n选项和参数：\n";
    printf "%6s", '-c, ';
    printf "%-24s", '--exit-code=EXIT-CODE';
    if (length('--exit-code=EXIT-CODE') > 24 and length() > 0) {
        print "\n";
        printf "%30s", "";
    }
    printf "%s", ;
    print "\n";

    my $exit_value = 0;
    if (@_ && $_[0] ne "help" && $_[1] != 1) {
        $exit_value = shift @_;
        print "@_\n";
    }

    exit($exit_value);
};

GetOptions (
    'exit-code|c=s' => \$exit_code,
    'help|h!' => \&$handler_help,
);


## end generated code

my $seen_exit_codes_title;
my $seen_exit_code;

# EXIT CODES
#        There are a bunch of different error codes and their corresponding
#        error messages that may appear during bad conditions. At the time of
#        this writing, the exit codes are:

#        1      Unsupported protocol. This build of curl has no support for this
#               protocol.

for ( capturex("man", "curl")) {
    $_ = decode_utf8($_);
    chomp;

    s,\x08.,,g;

    if (not $seen_exit_codes_title and m,^EXIT CODES$,) {
        $seen_exit_codes_title = 1;
    }

    if ($seen_exit_codes_title and s,^\s+(\d+)\s+,,) {
        $seen_exit_code = 1 if $1 == $exit_code;
    }

    if ($seen_exit_code) {
        if (m,\S,) {
            s,^\s+,,;
            print;
        } else {
            exit
        }
    }
}
