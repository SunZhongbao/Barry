#!/usr/bin/env bash

set -e

change_user=$1
template_user=$2
export IFS=$'\n'
current_groups=$(
    ssh-gerrit --admin ls-groups --user "$change_user"
              )

IFS=$'\n'
if [[ "$template_user" =~ ^- ]]; then
    add_groups=
    remove_groups=$(echo "${template_user#-}" )
elif [[ $template_user =~ ^\+ ]]; then
    add_groups=$(echo "${template_user#+}")
    remove_groups=
else
    to_groups=$(
        ssh-gerrit --admin ls-groups --user "$template_user" | grep -v -P -e 'Registered Users|userid/|user/|Anonymous Users|ldap/' ||
            echo "$template_user"
             )

    remove_groups=$(
        arg1-arg2 -s $'\n' "$current_groups" "$to_groups"
                 )

    add_groups=$(
        arg1-arg2 -s $'\n' "$to_groups" "$current_groups"
              )
fi

unset IFS
for x in $add_groups; do
    echo add: $x
done

for x in $remove_groups; do
    echo remove: $x
done


if test "${add_groups}" -o "${remove_groups}"; then
    if test "$(set -- $add_groups $remove_groups; echo $#)" = 1 || yes-or-no-p "确认把 $change_user 的 gerrit 分组设成跟 $template_user 一样（add：$add_groups；del：$remove_groups）？"; then
        if test "${add_groups}"; then
            add_args=()
            for x in $add_groups; do
                log add $x
                add_args+=("$(quote-args "$x")")
            done

            ssh-gerrit --admin set-members "${add_args[@]}" -a "${change_user}"
        fi

        if test "${remove_groups}"; then
            del_args=()
            for x in $remove_groups; do
                log delete $x
                if test "$x" = "Registered Users" -o "$x" = "Anonymous Users" ||
                        [[ $x =~ ^useri?d?/ ]]; then
                    continue
                fi
                del_args+=("$(quote-args "$x")")
            done
            ssh-gerrit --admin set-members "${del_args[@]}" -r "${change_user}"
        fi
    fi
else
    log "They are already in the same groups: $change_user = $template_user"
fi
