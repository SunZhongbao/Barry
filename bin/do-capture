#!/usr/bin/env bash


## start code-generator "^\\s *#\\s *"
# generate-getopt ashow-all-tasks=unset
## end code-generator
## start generated code
TEMP=$( getopt -o ah \
               --long show-all-tasks,help,no-show-all-tasks \
               -n $(basename -- $0) -- "$@")
declare show_all_tasks=unset
eval set -- "$TEMP"
while true; do
    case "$1" in

        -a|--show-all-tasks|--no-show-all-tasks)
            if test "$1" = --no-show-all-tasks; then
                show_all_tasks=false
            else
                show_all_tasks=true
            fi
            shift

            ;;
        -h|--help)
            set +x
            echo -e
            echo
            echo Options and arguments:
            printf %6s '-a, '
            printf %-24s '--[no-]show-all-tasks'
            echo
            exit
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error: $(. bt; echo; bt | indent-stdin)"
            ;;
    esac
done


## end generated code


if test $(basename $0) = do-capture-darwin; then
    export EMACS=t
fi

case "$(date +%w)" in
    0|6)
        show_all_tasks=true
        ;;
esac

if test "$show_all_tasks" = true; then
    touch ~/.cache/system-config/do-capture.show-all
elif test "$show_all_tasks" = false; then
    rm -f ~/.cache/system-config/do-capture.show-all
elif test -e ~/.cache/system-config/do-capture.show-all; then
    show_all_tasks=true
fi

file=$(select-output-line -o -- bash -c 'cd ~/system-config/doc/projects; ls -t *.org; echo daily; echo agenda')

if test -z "$file"; then
    exit
fi

if test -e ~/system-config/doc/projects/"$file"; then
   e ~/system-config/doc/projects/$file;
elif test "$file" = agenda; then
    (
        cd ~/system-config/doc/projects
        for x in $(find . -type l) mantis.org Mail.org gerrit.org; do
            x=$(readlink -f "$x")
            emacs.client -d -e "(find-file-noselect \"$x\")"
        done
    )
    emacs.client -d -e '(progn
        (org-agenda-remove-restriction-lock)
        (org-agenda nil "d"))'
    emacsclient -e "$(
  exec <<EOFa3c903e7778a
  ; {%emacs-lisp-mode%}
  (progn
    (setq org-agenda-current-hour (string-to-number (format-time-string "%H")))
    <%reset-current-hour%>
    (org-agenda nil "d")
    (org-agenda-redo t))
  ; {%/emacs-lisp-mode%}
EOFa3c903e7778a

# {%sh-mode%}
if test "$show_all_tasks" = true; then
    reset_current_hour="(setq org-agenda-current-hour 18)";
elif test "${show_all_tasks}" = false; then
     reset_current_hour="(setq org-agenda-current-hour 10)";
fi
. .replace-%% --;
# {%/sh-mode%}

)"
elif test "$file" = daily; then
    do-daily
elif [[ "$file" =~ " " ]]; then
    set -- $file
    shift
    (
        cd ~/system-config/doc/projects
        file=$(F_FIND_OPTS='-maxdepth 1' f "$@" '!# .org' '.org')
        file=$(readlink -f "$file")
        find-or-exec emacs
        emacs.client -d -e "(progn
                           (find-file \"$file\")
                           (org-agenda-remove-restriction-lock)
                           (org-agenda-set-restriction-lock 'file)
                           (org-agenda nil \"t\"))"
    )

fi
