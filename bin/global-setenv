#!/usr/bin/env bash

set -e
## start code-generator "^\\s *#\\s *"
# generate-getopt -P c:client
## end code-generator
## start generated code
TEMP=$(POSIXLY_CORRECT=true getopt -o c:h \
                      --long client:,help \
                      -n $(basename -- $0) -- "$@")
declare client=
eval set -- "$TEMP"
while true; do
    case "$1" in

        -c|--client)
            client=$2
            shift 2

            ;;
        -h|--help)
            set +x
            echo -e
            echo
            echo Options and arguments:
            printf %6s '-c, '
            printf %-24s '--client=CLIENT'
            echo
            exit
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error: $(. bt; echo; bt | indent-stdin)"
            ;;
    esac
done


## end generated code


if test -e ~/.local-config/etc/global-setenv; then
    declare -x -p > ~/tmp/before-private-setenv
    . ~/.local-config/etc/global-setenv
    declare -x -p > ~/tmp/after-private-setenv
    diff ~/tmp/before-private-setenv ~/tmp/after-private-setenv > ~/tmp/private-env.diff || true
fi

unset TMUX

setenvs=$(declare -x -p | perl -ne "$(
cat <<'EOF3ca1586eb1f1'
# {%perl-mode%}
next unless m,^declare -x (\w+)="[^"]*"$,;
next if $1 eq "WINDOWID";
next if $1 eq "SC_EXTRA_PS1";
s,^declare -x ,(setenv ",;
s,=," ,;
s,$,),;
print
# {%/perl-mode%}
EOF3ca1586eb1f1

)")

lisp=$(
    cat <<'EOF2f77bccb9b66' |. .replace-%% --
; {%emacs-lisp-mode%}
(progn
  [%setenvs%])
; {%/emacs-lisp-mode%}
EOF2f77bccb9b66

)


# {%sh-mode%}
echo "${lisp}" > ~/tmp/global-setenv.log
if test "${client}"; then
    ${client} -e "${lisp}"
else
    emacsclient -e "${lisp}"
    sawfish-client -e "${lisp}"
fi
# {%/sh-mode%}
