#!/usr/bin/env perl
use strict;
use v5.10.1; # for say and switch
use autodie qw(:all);
use IPC::System::Simple qw(run runx capture capturex $EXITVAL EXIT_ANY);
binmode(STDOUT, ":utf8");
binmode(STDERR, ":utf8");
use Encode;
use utf8;
my @SAVED_ARGV = @ARGV;

@ARGV = map {decode_utf8 $_} @ARGV;

use feature 'signatures';
no warnings "experimental::signatures";

use Data::Dumper;
use JSON;

my $json = JSON->new->utf8->canonical->pretty;

(my $comment_doc = <<~'EOFc83131117f09') =~ s,^# .*org-mode.*,,gm;
# {%org-mode%}

# {%/org-mode%}
EOFc83131117f09

## start code-generator "^\\s *#\\s *"
# generate-getopt -s perl -P '?"$comment_doc"' \
# r:repo-name \
# fforce-import '?"如果已存在，继续导入"' \

## end code-generator
## start generated code
use Getopt::Long;

Getopt::Long::Configure("posix_default");



my $force_import = 0;
my $repo_name = "";

my $handler_help = sub {
    print "$comment_doc";
    print "\n\n选项和参数：\n";
    printf "%6s", '-f, ';
    printf "%-24s", '--[no]force-import';
    if (length('--[no]force-import') > 24 and length("如果已存在，继续导入") > 0) {
        print "\n";
        printf "%30s", "";
    }
    printf "%s", "如果已存在，继续导入";
    print "\n";
    printf "%6s", '-r, ';
    printf "%-24s", '--repo-name=REPO-NAME';
    if (length('--repo-name=REPO-NAME') > 24 and length() > 0) {
        print "\n";
        printf "%30s", "";
    }
    printf "%s", ;
    print "\n";

    my $exit_value = 0;
    if (@_ && $_[0] ne "help" && $_[1] != 1) {
        $exit_value = shift @_;
        print "@_\n";
    }

    exit($exit_value);
};

GetOptions (
    'force-import|f!' => \$force_import,
    'repo-name|r=s' => \$repo_name,
    'help|h!' => \&$handler_help,
);


## end generated code

my %imported_repos; # in case of infinite loop

sub import_1_repo;

sub import_1_repo($repo_name) {
    next if $imported_repos{$repo_name};
    $imported_repos{$repo_name} = 1;

    say STDERR "importing $repo_name";
    $ENV{scm_artifactory_url} = $ENV{scm_artifactory_test_url};
    my $repo_json = $json->decode(scalar capturex("debug-run", "artifactory", "my-curl", "api/repositories/${repo_name}",));

    for (@{$repo_json->{repositories}}) {
        say STDERR "recursive import: $_";
        import_1_repo($_);
    }

    $ENV{scm_artifactory_url} = $ENV{scm_artifactory_prod_url};
    runx(EXIT_ANY, "artifactory", "my-curl", "api/repositories/${repo_name}", "-X", "PUT", "-H", "Content-Type: application/json", "-d", decode_utf8($json->encode($repo_json)), );
    if ($EXITVAL != 0) {
        say STDERR "Failed to import $repo_name";
    }
}

import_1_repo($repo_name);
