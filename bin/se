#!/usr/bin/env bash
set -e

. aterr bhj-notify -- "$0" "failed to run $0"

# SE means Switch Env：在生产环境和测试环境之间切换

declare comment_doc=$(
    cat <<'EOFe9576f8668e0' | grep -v '#.*org-mode%'
# {%org-mode%}
SE means Switch Env：在生产环境和测试环境之间切换。

如果当前窗口是 firefox，并且当前打开的 url 是 jenkins / jira /
artifactory 等网页的话，会自动切换到其对应的 prod/test 环境的网址。
# {%/org-mode%}
EOFe9576f8668e0
        )

## start code-generator "^\\s *#\\s *"
# generate-getopt -P '?"${comment_doc}"' \
    # ddefault=@null@ '?"--no-default 会启动一个 bash 进程，默认会修改当前 bash 进程的环境变量"' \
    # j:jira-env=test '?"one of test, sync"' \
    # f:firefox-instance=1 '?"one of 1, 2"' \
    # t:terminal-name=SE '?"new terminal name"' \

## end code-generator
## start generated code
TEMP=$(POSIXLY_CORRECT=true getopt -o df:j:t:h \
                      --long default,firefox-instance:,jira-env:,terminal-name:,help,no-default \
                      -n $(basename -- $0) -- "$@")
declare default=@null@
declare firefox_instance=1
declare jira_env=test
declare terminal_name=SE
eval set -- "$TEMP"
while true; do
    case "$1" in

        -d|--default|--no-default)
            if test "$1" = --no-default; then
                default=false
            else
                default=true
            fi
            shift

            ;;
        -f|--firefox-instance)
            firefox_instance=$2
            shift 2

            ;;
        -j|--jira-env)
            jira_env=$2
            shift 2

            ;;
        -t|--terminal-name)
            terminal_name=$2
            shift 2

            ;;
        -h|--help)
            set +x
            echo -e "${comment_doc}"
            echo
            echo Options and arguments:
            printf %6s '-d, '
            printf %-24s '--[no-]default'
            echo "--no-default 会启动一个 bash 进程，默认会修改当前 bash 进程的环境变量"
            printf %6s '-f, '
            printf %-24s '--firefox-instance=FIREFOX_INSTANCE'
            echo
            printf "%30s" ""
            echo "one of 1, 2"
            printf %6s '-j, '
            printf %-24s '--jira-env=JIRA_ENV'
            echo "one of test, sync"
            printf %6s '-t, '
            printf %-24s '--terminal-name=TERMINAL_NAME'
            echo
            printf "%30s" ""
            echo "new terminal name"
            exit
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error: $(. bt; echo; bt | indent-stdin)"
            ;;
    esac
done


## end generated code


if test "${default}" = true; then
    if test -e ~/.config/system-config/scm-testing; then
        rm -f ~/.config/system-config/scm-testing
        touch ~/.config/system-config/scm-prod
    else
        rm -f ~/.config/system-config/scm-prod
        touch ~/.config/system-config/scm-testing
    fi
    myscr --bg 'global-setenv'
    myscr bash
    exit
elif test "${default}" = false; then
    export SE_LOCAL=true
    . ~/src/ep-tools/common_utils/etc/global-settings.rc
    if test "${jira_env}" = sync; then
        scm_jira_url=${scm_jira_staging_url}
        scm_jenkins_url=${scm_jenkins_sync_url}
        firefox_instance=2
        terminal_name=staging
        SC_EXTRA_PS1=${SC_EXTRA_PS1/testing/${terminal_name}}
    elif test "${jira_env}" = test; then
        scm_jira_url=${scm_jira_test_url}
    elif test "${jira_env}" = prod; then
        if yes-or-no-p "确认一定要修改成 prod 环境吗？非常危险！"; then
            scm_jira_url=${scm_jira_prod_url}
            terminal_name='prod!!!'
            SC_EXTRA_PS1=${SC_EXTRA_PS1/testing/${terminal_name}}
        fi
    else
        die "Can't handle jira env: ${jira_env}"
    fi

    tmux rename-window "${terminal_name}"
    . atexit tmux rename-window bash
    private-firefox -i "${firefox_instance}" -e bash
    exit 0
fi

declare -A url_switch_map

url_switch_map[\$scm_jenkins_prod_url]=:'EMACS=t select-args $scm_jenkins_test_url http://192.168.4.168:8088/'
url_switch_map[\$scm_jenkins_test_url]=$scm_jenkins_prod_url
url_switch_map[http://192.168.4.168:8088/]=${scm_jenkins_prod_url}

url_switch_map[http://hmi-ci.it.chehejia.com/]=$scm_jenkins_test_url

url_switch_map[\$scm_jira_prod_url]=$scm_jira_test_url
url_switch_map[\$scm_jira_test_url]=$scm_jira_prod_url
url_switch_map[\$scm_gerrit_prod_url]=$scm_gerrit_test_url
url_switch_map[\$scm_gerrit_test_url]=$scm_gerrit_prod_url

if test "${default}" != true; then
    top_window=$(sawfish-top-window)
    if [[ $top_window =~ Firefox ]]; then
        current_url=$(get-firefox-tab-url)
        if [[ $1 =~ 1|2 ]]; then
            private-firefox -i "$1" -- --new-tab "${current_url}"
            exit
        fi
        for match_key in "${!url_switch_map[@]}"; do
            if [[ $match_key =~ ^\$ ]]; then
                match_url=$(eval echo $match_key)
            else
                match_url=$match_key
            fi

            if [[ $current_url =~ ^$match_url ]]; then
                if [[ $match_key =~ prod_url ]]; then
                    export SE_LOCAL=true
                    . testing
                fi
                target_site=${url_switch_map[$match_key]}
                if [[ $target_site =~ ^: ]]; then
                    target_site=$(eval "${target_site#:}")
                fi
                target_url=${target_site}${current_url#$match_url}
                firefox "$target_url"
                exit 0
            fi
        done
    fi
fi
exit 1
