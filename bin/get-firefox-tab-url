#!/usr/bin/env bash


## start code-generator "^\\s *#\\s *"
# generate-getopt -P @with-xkeytool=true
## end code-generator
## start generated code
TEMP=$(POSIXLY_CORRECT=true getopt -o h \
                      --long with-xkeytool,help,no-with-xkeytool \
                      -n $(basename -- $0) -- "$@")
declare with_xkeytool=true
eval set -- "$TEMP"
while true; do
    case "$1" in

        --with-xkeytool|--no-with-xkeytool)
            if test "$1" = --no-with-xkeytool; then
                with_xkeytool=false
            else
                with_xkeytool=true
            fi
            shift

            ;;
        -h|--help)
            set +x
            echo -e
            echo
            echo Options and arguments:
            printf "%6s" " "
            printf %-24s '--[no-]with-xkeytool'
            echo
            exit
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error: $(. bt; echo; bt | indent-stdin)"
            ;;
    esac
done


## end generated code


# exec 2> ~/tmp/get-firefox-tab-url.log
# set -x

export SAWFISH_BROWSER_INPUT_SLEEP=${SAWFISH_BROWSER_INPUT_SLEEP:-.05}
current_clipboard=$(getclip)
. atexit putclip "${current_clipboard}"

empty_clipboard=@empty@

putclip "${empty_clipboard}"

for x in $(seq 1 2); do
    if test "$x" = 1 -o "${with_xkeytool}" != true; then
        # xdotool-delayed-key ctrl+shift+F11
        sawfish-browser-input C-S-F11
    else
        if test "${with_xkeytool}" = true; then
            sawfish-browser-input C-l C-c ESC
        fi
    fi

    sleep .1
    out=$(
        getclip |grep . ||
            xclip -o
       )

    if test "$out" = "${empty_clipboard}"; then
        echo out not ready >> ~/.cache/system-config/logs/$(basename $0).log
        for y in $(seq 1 5); do
            sleep .03
            out=$(
                getclip |grep . ||
                xclip -o
            )
            if test "$out" != "${empty_clipboard}"; then
                echo out became "'$out'" at $x/$y >> ~/.cache/system-config/logs/$(basename $0).log
                echo -n ${out}
                exit 0
            fi
        done
    else
        echo -n ${out}
        exit 0
    fi
done
