#+name: perl-script-xy
#+BEGIN_SRC cperl
  BEGIN {
      use v5.10;
      $mCurrentRotation = 0;
      $standard_width = $ENV{standard_width};
      $standard_height = $ENV{standard_height};

      $init_width = 1080;
      $init_height = 1920;

      if ($ENV{scaling} eq "false") {
          $app_width = 1080;
          $app_height = 1920;
      } else {
          $xy = qx(my-adb dumpsys window);

          if ($xy =~ m/mStableFullscreen=.*?(\d+),(\d+)[])]$/m) {
              $app_width = $1;
              $app_height = $2;

          } else {
              print "Can't match width and height from mStableFullscreen";
              exit 1;
          }

          $xy =~ m/init=(\d+)x(\d+)/;
          $init_width = $1;
          $init_height = $2;

          $xy =~ m/cur=(\d+)x(\d+)/;
          $cur_width = $1;
          $cur_height = $2;

          if ($app_width > $app_height) {
              ($standard_width, $standard_height) = ($standard_height, $standard_width);
          }


          if ($xy =~ m/mCurrentRotation=(\d)/) {
              $mCurrentRotation = $1;
          }
      }
  }
  if (m/ABS_MT_POSITION_/) {
      chomp;
      @fields = split;
      ($name, $val) = @fields[2,3];
      $val = hex($val);
      # print "$name: $val\r\n";
      if ($name =~ m/ABS_MT_POSITION_X/) {
          $val_x = $val;
      } elsif ($name =~ m/ABS_MT_POSITION_Y/) {
          $val_y = $val;
      }
  }

  if (m/SYN_REPORT/) {

      if ($mCurrentRotation % 2 == 1) {
          ($x, $y) = ($val_y, $val_x);
      } else {
          ($x, $y) = ($val_x, $val_y);
      }

      if ($mCurrentRotation == 1) {
          $y = $cur_height - $y;
      }

      if ($mCurrentRotation == 2) {
          ($x, $y) = ($cur_width - $x, $cur_height - $y);
      }

      if ($mCurrentRotation == 3) {
          $x = $cur_width - $x;
      }

      # print "$val_x -> $x, $val_y -> $y\r\n";

      if ($ENV{scaling} ne "unset") {
          $x = int($x * $standard_width / $app_width);
          $y = int($y * $standard_height / $app_height);
      }

      if ($ENV{print_tap}) {
          my $print_str = "$ENV{print_tap}($x, $y)";
          if ($ENV{print_format}) {
              $print_str = sprintf($ENV{print_format}, $x, $y);
          }
          system("putclip", $print_str);
          print "$print_str\r\n";
      } else {
          print "$ENV{TAP} $x $y\r\n";
          system("putclip $ENV{TAP} $x $y");
      }
  }

#+END_SRC
** 最终的版本：

#+name: read-only
#+BEGIN_SRC sh
# Local Variables: #
# eval: (read-only-mode 1) #
# End: #
#+END_SRC

#+name: old-code
#+BEGIN_SRC sh :noweb yes
  #!/usr/bin/env bash

  ## start code-generator "^\\s *#\\s *"
  # generate-getopt -e \
      # @scaling=unset '?"unset: 不处理缩放；false: 强制不需要缩放；true: 强制需要缩放"' \
      # @:print-format \
      # @:standard-width=1080 \
      # @:standard-height=1920
  ## end code-generator
  ## start generated code
  TEMP=$( getopt -o h \
                 --long print-format:,scaling,standard-height:,standard-width:,help,no-scaling \
                 -n "$(basename -- "$0")" -- "$@")
  declare -x print_format=${print_format:-}
  declare -x scaling=${scaling:-unset}
  declare -x standard_height=${standard_height:-1920}
  declare -x standard_width=${standard_width:-1080}
  eval set -- "$TEMP"
  while true; do
      case "$1" in

          --print-format)
              print_format=$2
              shift 2

              ;;
          --scaling|--no-scaling)
              if test "$1" = --no-scaling; then
                  scaling=false
              else
                  scaling=true
              fi
              shift

              ;;
          --standard-height)
              standard_height=$2
              shift 2

              ;;
          --standard-width)
              standard_width=$2
              shift 2

              ;;
          -h|--help)
              set +x
              echo -e
              echo
              echo Options and arguments:
              printf "%6s" " "
              printf %-24s '--print-format=PRINT_FORMAT'
              echo
              printf "%6s" " "
              printf %-24s '--[no-]scaling'
              echo "unset: 不处理缩放；false: 强制不需要缩放；true: 强制需要缩放"
              printf "%6s" " "
              printf %-24s '--standard-height=STANDARD_HEIGHT'
              echo
              printf "%6s" " "
              printf %-24s '--standard-width=STANDARD_WIDTH'
              echo
              exit
              shift
              ;;
          --)
              shift
              break
              ;;
          ,*)
              die "internal error: $(. bt; echo; bt | indent-stdin)"
              ;;
      esac
  done


  ## end generated code

  window_dump=$(
      my-adb dumpsys window | perl -ne 'print if m/Display: mDisplayId=0/..m/init=/'
             )

  true_size=$(echo "$window_dump"|perl -ne 'print "app=${1}x${2}" if m/mStableFullscreen=.*?(\d+),(\d+)[])]\s*$/')
  init_size=$(echo "$window_dump"|grep -o -P 'init=\d+x\d+')

  if test "${scaling}" = unset; then
      export print_tap=tap # for onmyoji
      export print_format="tap %d %d"
  elif test "$init_size" != "init=1080x1920"; then
      export print_tap=adb_tap_${init_size#init=}
      if test "$print_format" = Wrench; then
          export print_format="Wrench \"$print_tap(%d, %d)\""
      elif test "$print_format" = adb_event -o "$print_format" = adb-tap; then
          export print_format="adb-tap %d %d"
      elif [[ "$print_format" =~ Wrench- ]]; then
          export print_format="Wrench \"$print_tap(%d, %d, nil, nil, nil, ${print_format#Wrench-})\""
      fi
  fi

  if test "$scaling" = false -a "$true_size" != "app=1080x1920"; then
      log "Need scaling: mStableFullscreen($true_size), using scaling"
      scaling=true
  fi

  export TAP=adb-tap
  if test "$1"; then
      export TAP=$1
  fi

  (sleep 5) >/dev/null 2>&1 & # to make it safe with Lenovo A360t?
  adb-tty getevent -l "$@" </dev/tty | perl -ne "$(cat <<'EOF04cdaedc86bf'
  <<perl-script-xy>>
  EOF04cdaedc86bf
    )"
#+END_SRC

#+name: the-ultimate-script
#+BEGIN_SRC sh :tangle ~/system-config/bin/adb-get-xy :comments link :shebang "#!/usr/bin/env bash" :noweb yes
set -e

<<old-code>>
<<read-only>>
#+END_SRC

#+results: the-ultimate-script

