#!/usr/bin/env perl
use strict;
use v5.10.1; # for say and switch
use autodie qw(:all);
use IPC::System::Simple qw(run runx capture capturex $EXITVAL EXIT_ANY);
binmode(STDOUT, ":utf8");
binmode(STDERR, ":utf8");
use Encode;
use utf8;
@ARGV = map {decode_utf8 $_} @ARGV;

use JSON;

my $json = JSON->new->utf8->canonical->pretty;
use File::Slurp;

(my $comment_doc = <<~'EOFc83131117f09') =~ s,^# .*org-mode.*,,gm;
# {%org-mode%}
把指定的 workflow scheme 里的某 issuetype 的 workflow，替换为 new-wf-name。

如果指定 --global，则把 jira 全局所有使用 wf-name 的地方，通通换成 new-wf-name（其他 scheme、issuetype 参数，全都自动计算）。
# {%/org-mode%}
EOFc83131117f09

## start code-generator "^\\s *#\\s *"
# generate-getopt -s perl -P '?"$comment_doc"' \
# @:wf-name @:new-wf-name @:scheme-id @scheme-active @:issuetype-name \
# @global

## end code-generator
## start generated code
use Getopt::Long;

Getopt::Long::Configure("posix_default");



my $global = 0;
my $issuetype_name = "";
my $new_wf_name = "";
my $scheme_active = 0;
my $scheme_id = "";
my $wf_name = "";

my $handler_help = sub {
    print "$comment_doc";
print "\n\n选项和参数：\n";
printf "%6s", '';
printf "%-24s", '--[no]global';
if (length('--[no]global') > 24 and length() > 0) {
    print "\n";
    printf "%30s", "";
}
printf "%s", ;
print "\n";
printf "%6s", '';
printf "%-24s", '--issuetype-name=ISSUETYPE-NAME';
if (length('--issuetype-name=ISSUETYPE-NAME') > 24 and length() > 0) {
    print "\n";
    printf "%30s", "";
}
printf "%s", ;
print "\n";
printf "%6s", '';
printf "%-24s", '--new-wf-name=NEW-WF-NAME';
if (length('--new-wf-name=NEW-WF-NAME') > 24 and length() > 0) {
    print "\n";
    printf "%30s", "";
}
printf "%s", ;
print "\n";
printf "%6s", '';
printf "%-24s", '--[no]scheme-active';
if (length('--[no]scheme-active') > 24 and length() > 0) {
    print "\n";
    printf "%30s", "";
}
printf "%s", ;
print "\n";
printf "%6s", '';
printf "%-24s", '--scheme-id=SCHEME-ID';
if (length('--scheme-id=SCHEME-ID') > 24 and length() > 0) {
    print "\n";
    printf "%30s", "";
}
printf "%s", ;
print "\n";
printf "%6s", '';
printf "%-24s", '--wf-name=WF-NAME';
if (length('--wf-name=WF-NAME') > 24 and length() > 0) {
    print "\n";
    printf "%30s", "";
}
printf "%s", ;
print "\n";

    my $exit_value = 0;
    if (@_ && $_[0] ne "help" && $_[1] != 1) {
       $exit_value = shift @_;
       print "@_\n";
    }

    exit($exit_value);
};

GetOptions (
'global!' => \$global,
'issuetype-name=s' => \$issuetype_name,
'new-wf-name=s' => \$new_wf_name,
'scheme-active!' => \$scheme_active,
'scheme-id=s' => \$scheme_id,
'wf-name=s' => \$wf_name,
'help|h!' => \&$handler_help,
    );


## end generated code

if ($global) {
    my $wf_schemes =
        $json->decode(scalar capturex("debug-run", "cached-run", "-e", "scm_jira_url", "jkd", "export-workflowschemes"));

    for my $scheme (@$wf_schemes) {
        for my $issuetype_name (grep {$scheme->{issuetypes_workflow}{$_} eq $wf_name} keys %{$scheme->{issuetypes_workflow}}) {
                runx("debug-run", "jkd", "wfs-switch-wf", "--scheme-id", $scheme->{id},
                     ( $scheme->{active} ? "--scheme-active" : "--noscheme-active" ),
                     "--issuetype-name", $issuetype_name, "--new-wf-name", "$new_wf_name");
            }
    }
    exit;
}

my $scheme_json;
my $scheme_update_api;
if ($scheme_active) {
    runx(EXIT_ANY, "jkd", "rest", "workflowscheme/${scheme_id}/draft", "--", "-X", "DELETE");
    runx("jkd", "rest", "workflowscheme/${scheme_id}/createdraft", "--", "-X", "POST");
    $scheme_update_api = "workflowscheme/${scheme_id}/draft";
} else {
    $scheme_update_api = "workflowscheme/${scheme_id}";
}

$scheme_json = $json->decode(scalar capturex("jkd", "rest", "$scheme_update_api"));

if ($scheme_json->{defaultWorkflow} eq $wf_name) {
    $scheme_json->{defaultWorkflow} = $new_wf_name;
}

for (keys %{$scheme_json->{issueTypeMappings}}) {
    if ($scheme_json->{issueTypeMappings}{$_} eq $wf_name) {
        $scheme_json->{issueTypeMappings}{$_} = $new_wf_name;
    }
}

if ($issuetype_name) {
    my $issuetypes_json =
        $json->decode(scalar capture("cached-run -e scm_jira_url jkd rest issuetype"));
    my $issuetype_id;
    map {$issuetype_id = $_->{id} if $issuetype_name eq $_->{name}} @$issuetypes_json;

    $scheme_json->{issueTypeMappings}{$issuetype_id} = $new_wf_name;
}

my %new_scheme_json = map {$_, $scheme_json->{$_}} ('defaultWorkflow', 'issueTypeMappings');
runx("jkd", "rest", "${scheme_update_api}", "--", "-X", "PUT", "-H", "Content-Type: application/json", "--data", decode_utf8 $json->encode(\%new_scheme_json));


if ($scheme_active) {
    my $draft_id = $scheme_json->{id};
    my $tmp_html = "$ENV{HOME}/tmp/wfs-switch-wf.$$.html";

    if ($ENV{jkd_verbose} == 1) {
        $tmp_html =~ s,\.$$,,;
    } else {
        use AtExit;
        *clean_tmp = sub {
            unlink $tmp_html if -e $tmp_html;
            unlink "$tmp_html.head" if -e "$tmp_html.head";
        };

        atexit(\&clean_tmp);
    }

    my $migrate_url = "$ENV{scm_jira_url}secure/project/SelectProjectWorkflowSchemeStep2!default.jspa?draftMigration=true&schemeId=${draft_id}";
    my $html_text = decode_utf8 capturex("jkd", "webget", $migrate_url);

    use Mojo::DOM;
    my $dom = Mojo::DOM->new->parse($html_text);
    my @params = qw(projectId schemeId draftMigration projectIdsParameter Associate);
    my @params_values;
    for (@params) {
        push @params_values, sprintf("%s=%s", $_, $dom->at("input[name='$_']")->attr('value'));
    }

    if ($dom->at("select")) {
        runx(EXIT_ANY, "firefox", "$migrate_url");
        run("yes-or-no-p '请在 firefox 中确认 workflow migration（状态重命名）是否已完成?'");
        exit 0;
    }

    my $html_result =
    capturex('debug-run', "jkd", "webcurl", "$ENV{scm_jira_url}secure/project/SelectProjectWorkflowSchemeStep2.jspa", "-X", "POST", "-L", "-D", "$tmp_html.head",
         map { ('--data-urlencode', $_) } @params_values
     );

    my $head = read_file("$tmp_html.head");
    if ($head =~ m,Location: (.*?)$,ms) {
        (my $new_url = $1) =~ s,\r,,;
        $new_url =~ s,^/,$ENV{scm_jira_url},;
        say STDERR "Got new url: $new_url, waiting for completion...";
        my $migration_complete = 0;
        my $sleep_secs = 3;
        my $total_wait_secs = 10 * 60;
        for (1 .. ($total_wait_secs / $sleep_secs)) {
            sleep $sleep_secs;
            $html_result = capturex("jkd", "webget", "$new_url");
            if ($html_result =~ m,Workflow migration complete,) {
                $migration_complete = 1;
                write_file($tmp_html, $html_result);

                my $dom = Mojo::DOM->new->parse(decode_utf8 $html_result);
                my @params = qw(taskId destinationURL Acknowledge);
                my @params_values;
                for (@params) {
                    push @params_values, $_, $dom->at("input[name='$_']")->attr('value');
                }
                use URI::Query;
                my $qq = URI::Query->new(@params_values);

                my $html_result =
                    capturex('debug-run', "jkd", "webcurl", "$ENV{scm_jira_url}secure/project/AcknowledgeTask.jspa?${qq}", "-L", "-D", "$tmp_html.head");

                exit 0;
            }
            say STDERR ".";
        }

        if (not $migration_complete) {
            say STDERR "$html_result";
            die "Can't get to migration complete";
        }
    } else {
        die "Can't get new url to see if migration is complete";
    }

    exit 1
}
