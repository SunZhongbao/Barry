#!/usr/bin/env perl
my $last_indent = -1;
my $last_line = "";
my $last_line_num = 1;

my $last_indent_2 = 1;
my $last_line_2 = "";
my $last_line_num_2 = 0;
while (<>) {
  chomp;
  if ( $. == 1) {
    $last_line = $_;
  }
  if (m/^(\s*)\S/) {
    $current_indent = length $1;
    if ($current_indent == 0) {
      $last_indent = -1;
      $last_line = $_;
      $last_indent_2 = 0;
      $last_line_num = $.;
    }
    if (
        $last_indent < 12 &&
        (
         ($last_indent < $current_indent &&
          (
           $last_indent < $last_indent_2 or # this is the default case
           $last_indent_2 == 0 or           # this is
           (
            $last_line_num == $. - 1 && # the next line got indented
            $last_indent > $current_indent - 6 && # but not indented too far
            m/^\s*\w/ # not start with #, for e.g.
           ))) ||
        ($last_indent == $current_indent && $last_line =~ m/^\s*\S+$/))
       ) {
      if ($last_line =~ m/^\s*(\$?\w+\S*(\s+\S+){0,3})/) {
        $last_word = $1;
        if ( $last_indent <= 0) {
          $type = "section";
          $last_section = $last_word;
        } else {
          $type = ($last_section or "func");
        }
        printf "%s           %s     %d %s %s\n", $last_word, "$type-$last_indent", $last_line_num, $ARGV, $last_line unless $last_line =~ m/[({]$/;

      }
    }
    $last_indent_2 = $last_indent;
    $last_indent = $current_indent;
    $last_line = $_;
    $last_line_num = $.;
    # print "update to: $last_line_num:$last_indent:$last_indent_2 $last_line\n";
  }
}
