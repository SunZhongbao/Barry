#!/usr/bin/env perl
use strict;
use v5.10.1; # for say and switch
use autodie qw(:all);
use IPC::System::Simple qw(run runx capture capturex $EXITVAL EXIT_ANY);
binmode(STDOUT, ":utf8");
binmode(STDERR, ":utf8");
use Encode;
use utf8;
@ARGV = map {decode_utf8 $_} @ARGV;

use Data::Dumper;
use JSON;

my $json = JSON->new->utf8->canonical->pretty;

(my $comment_doc = <<~'EOFc83131117f09') =~ s,^# .*org-mode.*,,gm;
# {%org-mode%}

# {%/org-mode%}
EOFc83131117f09

## start code-generator "^\\s *#\\s *"
# generate-getopt -s perl -P '?"$comment_doc"' \
# g:groups='()' '?"列出哪些 groups，如果不指定，默认是所有 groups"' \

## end code-generator
## start generated code
use Getopt::Long;

Getopt::Long::Configure("posix_default");



my @groups = ();

my $handler_help = sub {
    print "$comment_doc";
    print "\n\n选项和参数：\n";
    printf "%6s", '-g, ';
    printf "%-24s", '--groups=GROUPS';
    if (length('--groups=GROUPS') > 24 and length("列出哪些 groups，如果不指定，默认是所有 groups") > 0) {
        print "\n";
        printf "%30s", "";
    }
    printf "%s", "列出哪些 groups，如果不指定，默认是所有 groups";
    print "\n";

    my $exit_value = 0;
    if (@_ && $_[0] ne "help" && $_[1] != 1) {
        $exit_value = shift @_;
        print "@_\n";
    }

    exit($exit_value);
};

GetOptions (
    'groups|g=s' => \@groups,
    'help|h!' => \&$handler_help,
);


## end generated code

use URI::Encode qw(uri_encode uri_decode);

my $groups;
if (@groups) {
    $groups = [
        map {
            {
                name => "$_",
                    uri => "$ENV{scm_artifactory_url}artifactory/api/security/groups/" . uri_encode($_),
            }
        } split(" ", join(" ", @groups))
    ]
} else {
    $groups =
        $json->decode(
            scalar capture(
                "cached-run -e scm_artifactory_url artifactory my-curl api/security/groups"));
}

use URI::Escape;
for (@$groups) {
    my $name = $_->{name};
    my $uri = $_->{uri};
    say STDERR "checking details for $name";
    my $details =
        $json->decode(scalar capturex("cached-run", "-e", "scm_artifactory_url", "artifactory", "my-curl", "${uri}?includeUsers=true"));

    $_->{details} = $details;
}

say decode_utf8($json->encode($groups));
