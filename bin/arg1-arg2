#!/usr/bin/env perl
use strict;

(my $comment_doc = <<~'EOFc83131117f09') =~ s,^# .*org-mode.*,,gm;
# {%org-mode%}
把 ARG1 用 SPLIT（根据 REGEXP 参数，可以是普通字符串或正则表达式）或 IFS（bash 环境变量）切割开，然后减去后续的 ARGS，返回集合的差。
# {%/org-mode%}
EOFc83131117f09

## start code-generator "^\\s *#\\s *"
# generate-getopt -s perl -P '?"$comment_doc"' \
# s:split rregexp vverbose
## end code-generator
## start generated code
use Getopt::Long;

Getopt::Long::Configure("posix_default");



my $regexp = 0;
my $split = "";
my $verbose = 0;

my $handler_help = sub {
    print "$comment_doc";
    print "\n\n选项和参数：\n";
    printf "%6s", '-r, ';
    printf "%-24s", '--[no]regexp';
    if (length('--[no]regexp') > 24 and length() > 0) {
        print "\n";
        printf "%30s", "";
    }
    printf "%s", ;
    print "\n";
    printf "%6s", '-s, ';
    printf "%-24s", '--split=SPLIT';
    if (length('--split=SPLIT') > 24 and length() > 0) {
        print "\n";
        printf "%30s", "";
    }
    printf "%s", ;
    print "\n";
    printf "%6s", '-v, ';
    printf "%-24s", '--[no]verbose';
    if (length('--[no]verbose') > 24 and length() > 0) {
        print "\n";
        printf "%30s", "";
    }
    printf "%s", ;
    print "\n";

    my $exit_value = 0;
    if (@_ && $_[0] ne "help" && $_[1] != 1) {
        $exit_value = shift @_;
        print "@_\n";
    }

    exit($exit_value);
};

GetOptions (
    'regexp|r!' => \$regexp,
    'split|s=s' => \$split,
    'verbose|v!' => \$verbose,
    'help|h!' => \&$handler_help,
);


## end generated code

if (not $split) {
    $split = " ";
} else {
    $split = qr($split) if $regexp;
}


my $arg1 = $ARGV[0];
my @arg1 = split($split, $arg1);
if ($verbose) {
    local $, = ", ";
    say STDERR "arg1 is ", @arg1, "split is '$split'\n";
}

sub debug(@) {
    print STDERR "@_\n";
}

shift @ARGV;


my $arg2;
my @arg2;

if (@ARGV > 1) {
    @arg2 = @ARGV;
} else {
    $arg2 = $ARGV[0];
    @arg2 = split($split, $arg2);
}

my %arg2;
my @arg1_remain;

for (@arg2) {
    $arg2{$_} = 1;
}

for (@arg1) {
    push @arg1_remain, $_ unless $arg2{$_} == 1;
}

$,="\n";
print @arg1_remain;
